@using FormulaBlazor.Features.Results.Models
@using FormulaBlazor.Features.Common.Ergast.Models
@using FormulaBlazor.Features.Common.Ergast
<MudPaper Style="overflow: scroll" Elevation="0">
    @if (QualifyingRaceTable is not null)
    {
        <MudSimpleTable Striped="true" Hover="true" Style="overflow-x: auto;">
            <thead>
            <tr>
                @foreach (var h in headings)
                {
                    <th>@h</th>
                }
            </tr>
            </thead>
            <tbody>
            @foreach (var x in QualifyingRaceTable.Races[0].QualifyingResults)
            {
                <tr>
                    <td>@x.Position</td>
                    <td>@x.Driver.PermanentNumber</td>
                    <td>@x.Driver.GivenName @x.Driver.GivenName</td>
                    <td>@x.Constructor.Name</td>
                    <td>@x.Q1</td>
                    <td>@x.Q2</td>
                    <td>@x.Q3</td>
                </tr>
            }
            </tbody>
        </MudSimpleTable>
    } else if (loadFailed)
    {
        <h1>error</h1>
    }
    else
    {
        <h1>loading</h1>
    }
</MudPaper>

@code {

    [Parameter] public string Year { get; set; }
    [Parameter] public string Round { get; set; }
    private QualifyingRaceTable? QualifyingRaceTable { get; set; }
    private bool loadFailed;
    [Inject] private IBaseErgastClient Client { get; set; }
    protected override async Task OnParametersSetAsync()
    {
        try
        {
            var data = await Client.GetAsync<QualifyingResponse>($"{Year}/{Round}/qualifying.json");
            var result = data.MrData.RaceTable;
            QualifyingRaceTable = result;
            loadFailed = false;
        }
        catch (Exception e)
        {
            loadFailed = true;
            Console.WriteLine(e);
            throw;
        }
        await base.OnParametersSetAsync();
    }

    string[] headings = { "POS", "NO", "DRIVER", "CAR", "Q1", "Q2", "Q3" };
    string[] rows = {
        @"1 Krishna kpartner0@usatoday.com Male 28.25.250.202",
        @"2 Webb wstitle1@ning.com Male 237.168.134.114",
        @"3 Nathanil nneal2@cyberchimps.com Male 92.6.0.175",
        @"4 Adara alockwood3@patch.com Female 182.174.217.152",
        @"5 Cecilius cchaplin4@shinystat.com Male 195.124.144.18",
        @"6 Cicely cemerine9@soup.io Female 138.94.191.43",
    };
}